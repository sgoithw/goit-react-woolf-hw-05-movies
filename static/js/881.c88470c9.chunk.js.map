{"version":3,"file":"static/js/881.c88470c9.chunk.js","mappings":"gMACA,EAA+B,6B,4CCyC/B,EAnCe,WACb,IAAAA,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IAILV,EAAS,MACTI,GAAa,GACbR,EAAU,KACViB,EAAAA,EAAAA,IAAa,CAAEH,MAAAA,IACZI,MAAK,SAAAC,GAAI,OAAInB,EAAUmB,EAAKA,KAAKC,QAAQ,IACzCC,OAAM,SAAAlB,GAAK,OAAIC,EAASD,EAAMmB,QAAQ,IACtCC,SAAQ,kBAAMf,GAAa,EAAM,IACtC,GAAG,CAACM,IAMJ,OACEU,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACC,SANA,SAAAhB,GACnBD,EAAgB,CAAEC,MAAAA,GACpB,IAKKP,IAAaqB,EAAAA,EAAAA,KAACG,EAAAA,GAAM,KACnBxB,IAAaqB,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CAACjC,OAAQA,IAClCI,IAASyB,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAC9B,MAAOA,MAG9B,C","sources":["pages/Movies/Movies.module.css","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesSearch\":\"Movies_moviesSearch__RhC6E\"};","import style from './Movies.module.css';\n\nimport { Error, Loader, MovieSearchForm, MoviesList } from 'components';\nimport { searchMovies } from 'api/movieDBApi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setError(null);\n    setIsLoading(true);\n    setMovies([]);\n    searchMovies({ query })\n      .then(data => setMovies(data.data.results))\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  const handleSearch = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <div className={style.moviesSearch}>\n      <MovieSearchForm onSearch={handleSearch} />\n      {isLoading && <Loader />}\n      {!isLoading && <MoviesList movies={movies} />}\n      {error && <Error error={error} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","searchMovies","then","data","results","catch","message","finally","_jsxs","className","style","children","_jsx","MovieSearchForm","onSearch","Loader","MoviesList","Error"],"sourceRoot":""}